{
  "name": "debezium-server",
  "version": "0.1.0",
  "description": "Plugin for running Debezium Server locally",
  "packages": [
    "nodejs@22.4.1",
    "pnpm@9.7.0",
    "github:cultureamp/devbox-extras#debezium-server"
  ],
  "env": {
    "DEVBOX_COREPACK_ENABLED": "true",
    "CONNECTOR_CONF_PATH": "{{.Virtenv}}",
    "DEBEZIUM_OPTS": "",
    "JAVA_OPTS": ""
  },
  "shell": {
    "init_hook": [
      "export PATH=$VENV_DIR/bin:$PATH",
      "export DEVBOX_DIR=$VENV_DIR",
      "export DB_HOSTNAME=localhost",
      "export DB_PORT=${PGPORT:-5432}",
      "export DB_AUTH_USERNAME=postgres",
      "export DB_AUTH_PASSWORD=postgres",
      "export DB_USERNAME=dbz_user",
      "export DB_PASSWORD=mydbzpassword",
      "export DB_NAME=postgres",
      "export DB_SCHEMA=public",
      "export BOOTSTRAP_SERVERS=${KAFKA_BROKERS}",
      "export SCHEMA_REGISTRY_URL=${SCHEMA_REGISTRY_URL}",
      "export FARM=local",
      "export INTERNAL_TOPIC_PREFIX=my_test_prefix",
      "export SLOT_NAME=my_test_slot",
      "export OFFSET_TOPIC=my_test_offset_topic",
      "export PUBLICATION_NAME=dbz_publication",
      "export OUTBOX_TABLE=outbox_table",
      "export HEARTBEAT_TABLE=debezium_heartbeat",
      "export TARGET_TOPIC=my_target_topic",
      "export SCHEMA_PATH=com.cultureamp.test.user.v1-value.avsc",
      "export SAMPLE_DATA_PATH=sample-data.json",
      "pnpm install -C {{.Virtenv}}"
    ],
    "scripts": {
      "init_outbox": [
        "psql -v debezium_user=${DB_USERNAME} \\",
        "-v debezium_password=${DB_PASSWORD} \\",
        "-v schema_name=${DB_SCHEMA} \\",
        "-v outbox_table_name=${OUTBOX_TABLE} \\",
        "-v heartbeat_table_name=${HEARTBEAT_TABLE} \\",
        "-h ${DB_HOSTNAME} \\",
        "-p ${DB_PORT} \\",
        "-U ${DB_AUTH_USERNAME} \\",
        "${DB_NAME} < {{.Virtenv}}/init_outbox.sql"
      ],
      "create_db": [
        "dropdb -h ${DB_HOSTNAME} -p ${DB_PORT} -U ${DB_AUTH_USERNAME} --if-exists ${DB_NAME}",
        "createdb -h ${DB_HOSTNAME} -p ${DB_PORT} -U ${DB_AUTH_USERNAME} ${DB_NAME}"
      ],
      "create_heartbeat_topic": [
        "kaf topic create _${FARM}.${INTERNAL_TOPIC_PREFIX}.debezium-heartbeat-table -p 1 -r 1 || true"
      ],
      "populate": [
        "pnpm run -C {{.Virtenv}} populate"
      ],
      "reset_offset": [
        "devbox services stop debezium_server && \\",
        "PID=$(ps aux | grep '[i]o.debezium.server.Main' | awk '{print $2}' | head -n 1) && \\",
        "[ -n \"$PID\" ] && timeout=0; while ps -p $PID > /dev/null && [ $timeout -lt 10 ]; do echo 'Waiting for debezium server to stop..'; sleep 1; ((timeout++)); done && \\",
        "echo \"Tombstoning connector offset\"",
        "echo \"[\\\"kafka\\\",{\\\"server\\\":\\\"${FARM}.${INTERNAL_TOPIC_PREFIX}\\\"}]|\" | \\",
        "kcat -P -Z -b ${KAFKA_BROKERS_SASL} -X sasl.mechanism=PLAIN -X sasl.username=${KAFKA_SASL_USER} -X sasl.password=${KAFKA_SASL_PASSWORD} -t ${OFFSET_TOPIC} -K \\| -p 0 && \\",
        "echo \"Restarting debezium server\" && \\",
        "devbox services start debezium_server"
      ],
      "debezium-server-readme": "{{.Virtenv}}/bin/debezium-server-readme",
      "postgres-version-check": "{{.Virtenv}}/bin/postgres-version-check"
    }
  },
  "create_files": {
    "{{.Virtenv}}/process-compose.yaml": "config/process-compose.yaml",
    "{{.Virtenv}}/application.properties": "config/debezium-server/application.properties",
    "{{.Virtenv}}/init_outbox.sql": "config/debezium-server/init_outbox.sql",
    "{{.Virtenv}}/bin/debezium-server-readme": "bin/debezium-server-readme",
    "{{.Virtenv}}/bin/postgres-version-check": "bin/postgres-version-check",
    "{{.Virtenv}}/package.json": "config/populate/package.json",
    "{{.Virtenv}}/tsconfig.json": "config/populate/tsconfig.json",
    "{{.Virtenv}}/sample-data.json": "config/populate/sample-data.json",
    "{{.Virtenv}}/populate.ts": "bin/populate.ts",
    "{{.Virtenv}}/com.cultureamp.test.user.v1-value.avsc": "config/populate/com.cultureamp.test.user.v1-value.avsc"
  }
}
