debezium.sink.type=kafka
debezium.sink.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
debezium.sink.kafka.producer.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
debezium.sink.kafka.producer.max.request.size=50000000
debezium.sink.kafka.producer.delivery.timeout.ms=1500000
debezium.sink.kafka.producer.retry.backoff.ms=300000
debezium.format.key=json
debezium.format.key.converter=org.apache.kafka.connect.storage.StringConverter
debezium.format.key.schemas.enable=false
debezium.format.value=binary
debezium.format.value.schemas.enable=false
debezium.format.value.converter=io.debezium.converters.BinaryDataConverter
debezium.format.delegate.converter.type=org.apache.kafka.connect.json.JsonConverter
debezium.format.delegate.converter.type.schemas.enable=false
debezium.source.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.source.tasks.max=1
debezium.source.plugin.name=pgoutput
debezium.source.topic.prefix=${FARM}.${INTERNAL_TOPIC_PREFIX}
debezium.source.publication.autocreate.mode=filtered
debezium.source.slot.name=${SLOT_NAME}
debezium.source.slot.drop.on.stop=false
debezium.source.table.include.list=${DB_SCHEMA}.${OUTBOX_TABLE}, ${DB_SCHEMA}.${HEARTBEAT_TABLE}
debezium.source.publication.name=${PUBLICATION_NAME}
debezium.source.offset.storage=org.apache.kafka.connect.storage.KafkaOffsetBackingStore
debezium.source.offset.storage.topic=${OFFSET_TOPIC}
debezium.source.offset.storage.partitions=1
debezium.source.offset.storage.replication.factor=1
debezium.transforms=router, heartbeat1, heartbeat2
debezium.transforms.router.type=io.debezium.transforms.outbox.EventRouter
debezium.transforms.router.route.topic.replacement=${FARM}.$1
debezium.transforms.router.route.by.field=topic
debezium.transforms.router.table.field.event.payload=payload
debezium.transforms.router.table.field.event.key=partition_key
debezium.transforms.router.table.field.event.id=id
debezium.transforms.router.predicate=outbox
debezium.predicates=outbox
debezium.predicates.outbox.type=org.apache.kafka.connect.transforms.predicates.TopicNameMatches
debezium.predicates.outbox.pattern=${FARM}.${INTERNAL_TOPIC_PREFIX}.${DB_SCHEMA}.${OUTBOX_TABLE}
debezium.transforms.heartbeat1.type=org.apache.kafka.connect.transforms.RegexRouter
debezium.transforms.heartbeat1.regex=__debezium-heartbeat.${FARM}.${INTERNAL_TOPIC_PREFIX}
debezium.transforms.heartbeat1.replacement=${FARM}.${INTERNAL_TOPIC_PREFIX}.debezium-heartbeat-interval
debezium.transforms.heartbeat2.type=org.apache.kafka.connect.transforms.RegexRouter
debezium.transforms.heartbeat2.regex=${FARM}.${INTERNAL_TOPIC_PREFIX}.${DB_SCHEMA}.${HEARTBEAT_TABLE}(.*?)
debezium.transforms.heartbeat2.replacement=_${FARM}.${INTERNAL_TOPIC_PREFIX}.debezium-heartbeat-table
debezium.source.database.initial.statements=INSERT INTO ${DB_SCHEMA}.${HEARTBEAT_TABLE} (id, heartbeat_recorded) VALUES (1, NOW()) ON CONFLICT(id) DO UPDATE SET heartbeat_recorded=EXCLUDED.heartbeat_recorded;
debezium.source.heartbeat.action.query=INSERT INTO ${DB_SCHEMA}.${HEARTBEAT_TABLE} (id, heartbeat_recorded) VALUES (1, NOW()) ON CONFLICT(id) DO UPDATE SET heartbeat_recorded=EXCLUDED.heartbeat_recorded;
debezium.source.heartbeat.interval.ms=10000
debezium.source.database.hostname=${DB_HOSTNAME}
debezium.source.database.port=${DB_PORT}
debezium.source.database.user=${DB_USERNAME}
debezium.source.database.password=${DB_PASSWORD}
debezium.source.database.dbname=${DB_NAME}
debezium.source.bootstrap.servers=${BOOTSTRAP_SERVERS}
debezium.sink.kafka.producer.bootstrap.servers=${BOOTSTRAP_SERVERS}