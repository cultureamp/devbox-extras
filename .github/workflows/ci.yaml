name: "ci"

on: pull_request

jobs:
  test-bootstrap-zsh:
    name: zsh-integration
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image with bootstrap script
        run: docker build -t bootstrap-script-test-zsh -f ./bootstrap-test.Dockerfile . --build-arg SHELL_VAR=zsh
      - name: Run bats-zsh test via devbox
        run: docker run bootstrap-script-test-zsh bats test/bootstrap-agnostic.bats test/bootstrap-zsh.bats
  test-bootstrap-bash:
    name: bash-integration
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image with bootstrap script
        run: docker build -t bootstrap-script-test-bash -f ./bootstrap-test.Dockerfile . --build-arg SHELL_VAR=bash
      - name: Run bats-bash test via devbox
        run: docker run bootstrap-script-test-bash bats test/bootstrap-agnostic.bats test/bootstrap-bash.bats
  test-bootstrap-fish:
    name: fish-integration
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image with bootstrap script
        run: docker build -t bootstrap-script-test-fish -f ./bootstrap-test.Dockerfile . --build-arg SHELL_VAR=fish
      - name: Run bats-fish test via devbox
        run: docker run bootstrap-script-test-fish bats test/bootstrap-agnostic.bats test/bootstrap-fish.bats
  check-linting-and-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jetify-com/devbox-install-action@v0.9.0
      - run: devbox run lint
  hotel-install-script:
    strategy:
      matrix:
        # See: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
        # for the mapping of architecture to the runner type.
        runs-on: [macos-13, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: run install script
        shell: bash
        run: |
           ./scripts/install_hotel.sh "${{ secrets.HOTEL_ACCESS_TOKEN }}" 
      - name: verify hotel executable is available and working
        shell: bash
        run: hotel --version
  ensure-combined-cert-up-to-date:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - run: |
          nix run .#generate-netskope-combined-cert
          git diff --exit-code ./certs/
